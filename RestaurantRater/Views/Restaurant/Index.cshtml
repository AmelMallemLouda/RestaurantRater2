@model IEnumerable<RestaurantRater.Models.Restaurant>
@*The ViewBag in ASP.NET MVC is used to transfer temporary data (which is not included in the model) from the controller to the view.*@
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@*Our  line has given us a new a tag with the text of "Create New" and the route to "Create".
    This is what Razor methods are good for. We can write a method like we're used to in C# and then it gets rendered out as an HTML tag. Cool!*@
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*So we've added a table (<table>) with a single row (<tr>) that contains a few table headers (<th>).
    Inside those headers we call the Razor method DisplayNameFor and pass it.. something?
    What we're doing here is using a lambda expression (Links to an external site.) to pass in a specific property from the model*@

<table class="table">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th></th>
    </tr>
    @*item is the name of our Restaurant in each iteration.
        DisplayFor takes in a specific instance where DisplayNameFor is pulling from the model's object itself.
        DisplayFor will also show the value it holds instead of the name of the property.*@

    @foreach (var item in Model)
    {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>

                @Html.ActionLink("Edit", "Edit", new { id = item.RestaurantId })
                @Html.ActionLink("Details", "Details", new { id = item.RestaurantId })
                @Html.ActionLink("Delete", "Delete", new { id = item.RestaurantId })
            </td>
        </tr>
    }

</table>
